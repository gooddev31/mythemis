"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
require("dotenv").config();
require("express-async-errors");
const bodyParser = require("body-parser");
const dbConnect = require("./config/dbConnect.config");
const mongoose = require("mongoose");
const { logger, logEvents } = require("./middleware/logger.middleware");
const cors = require("cors");
const cookieParser = require("cookie-parser");
const corsConfig = require("./config/corsConfig.config");
const AuthRouter = require("./routes/auth.router");
const FolderRouter = require("./routes/folder.router");
const UserRouter = require("./routes/user.router");
const { errorHandlerMiddleware, } = require("./middleware/errorHandler.middleware");
const auth_middleware_1 = require("./middleware/auth.middleware");
const express_1 = __importDefault(require("express"));
const helmet_1 = __importDefault(require("helmet"));
const app = (0, express_1.default)();
const PORT = process.env.PORT || 3001;
dbConnect();
app.use(logger);
app.use((0, helmet_1.default)());
app.disable("x-powered-by");
app.use(bodyParser.json());
app.use(cookieParser());
app.use(express_1.default.json());
app.use(cors(corsConfig));
app.use(AuthRouter);
app.use("/user", auth_middleware_1.authenticate, UserRouter);
app.use("/folder", auth_middleware_1.authenticate, FolderRouter);
const TeamRouter = require("./routes/team.router");
app.use("/team", TeamRouter);
app.use(errorHandlerMiddleware);
mongoose.connection.once("open", () => {
    console.log("Connection to MongoDB success");
    app.listen(PORT, () => console.log(`Server running on port ${PORT}`));
});
mongoose.connection.on("error", (err) => {
    console.log(err);
    logEvents(`${err.no}: ${err.code}\t${err.syscall}\t${err.hostname}`, "mongoErrLog.log");
});
